@startuml
skinparam shadowing false
hide members
hide circle
class "L.C"
class "G.Board"
class "G.i : List"
class "G.j : List"
class "G.x : Card"
class "G.k : List"
class "G.y : Card"
"G.Board"-->"G.i : List" : "lists"
"G.Board"-->"G.j : List" : "lists"
"G.Board"-->"G.k : List" : "lists"
"G.j : List"-->"G.k : List" : "next"
"G.j : List"-->"G.i : List" : "previous"
"G.j : List"-->"G.x : Card" : "cards"
"G.k : List"-->"G.y : Card" : "cards"
class "G_.Board"
class "G_.i : List"
class "G_.j : List"
class "G_.x : Card"
class "G_.k : List"
class "G_.y : Card"
"G_.Board"-->"G_.i : List" : "lists"
"G_.Board"-->"G_.j : List" : "lists"
"G_.Board"-->"G_.k : List" : "lists"
"G_.j : List"-->"G_.k : List" : "next"
"G_.j : List"-->"G_.i : List" : "previous"
"G_.k : List"-->"G_.y : Card" : "cards"
class "D.Board"
class "D.i : List"
class "D.j : List"
class "D.k : List"
class "D.y : Card"
"D.Board"-->"D.i : List" : "lists"
"D.Board"-->"D.j : List" : "lists"
"D.Board"-->"D.k : List" : "lists"
"D.j : List"-->"D.k : List" : "next"
"D.j : List"-->"D.i : List" : "previous"
"D.k : List"-->"D.y : Card" : "cards"
class "initial_EMPTY_GRAPH;right==d;left.Board"
class "initial_EMPTY_GRAPH;right==d;left.i : List"
class "initial_EMPTY_GRAPH;right==d;left.j : List"
class "initial_EMPTY_GRAPH;right==d;left.k : List"
class "initial_EMPTY_GRAPH;right==d;left.y : Card"
"initial_EMPTY_GRAPH;right==d;left.Board"-->"initial_EMPTY_GRAPH;right==d;left.i : List" : "lists"
"initial_EMPTY_GRAPH;right==d;left.Board"-->"initial_EMPTY_GRAPH;right==d;left.j : List" : "lists"
"initial_EMPTY_GRAPH;right==d;left.Board"-->"initial_EMPTY_GRAPH;right==d;left.k : List" : "lists"
"initial_EMPTY_GRAPH;right==d;left.j : List"-->"initial_EMPTY_GRAPH;right==d;left.k : List" : "next"
"initial_EMPTY_GRAPH;right==d;left.j : List"-->"initial_EMPTY_GRAPH;right==d;left.i : List" : "previous"
"initial_EMPTY_GRAPH;right==d;left.k : List"-->"initial_EMPTY_GRAPH;right==d;left.y : Card" : "cards"
"L.C" --> "G.x : Card" : "m"
"L.C" --> "G_.x : Card" : "_m_"
"G_.Board" --> "G.Board" : "_g_"
"G_.i : List" --> "G.i : List" : "_g_"
"G_.j : List" --> "G.j : List" : "_g_"
"G_.x : Card" --> "G.x : Card" : "_g_"
"G_.k : List" --> "G.k : List" : "_g_"
"G_.y : Card" --> "G.y : Card" : "_g_"
"D.Board" --> "G_.Board" : "l'"
"D.i : List" --> "G_.i : List" : "l'"
"D.j : List" --> "G_.j : List" : "l'"
"D.k : List" --> "G_.k : List" : "l'"
"D.y : Card" --> "G_.y : Card" : "l'"
"D.Board" --> "initial_EMPTY_GRAPH;right==d;left.Board" : "left;initial_EMPTY_GRAPH;right==d;left"
"D.i : List" --> "initial_EMPTY_GRAPH;right==d;left.i : List" : "left;initial_EMPTY_GRAPH;right==d;left"
"D.j : List" --> "initial_EMPTY_GRAPH;right==d;left.j : List" : "left;initial_EMPTY_GRAPH;right==d;left"
"D.k : List" --> "initial_EMPTY_GRAPH;right==d;left.k : List" : "left;initial_EMPTY_GRAPH;right==d;left"
"D.y : Card" --> "initial_EMPTY_GRAPH;right==d;left.y : Card" : "left;initial_EMPTY_GRAPH;right==d;left"
@enduml
